snippet fnn
    fn
      ${1:args} -> ${0}
    end

snippet tec
    test "${1:test_name}", %{conn: conn} do
     conn = ${2:type} conn, ${3:resource}_path(conn, ${4:action}), ${5:attrs}
     resp = json_response(conn, ${6:status})
     assert ${7:assertion}
    end

snippet tea
    test "${1:test_name}" do
        assert ${2:`substitute(substitute(vim_snippets#Filename(), '_test$', '', ''), '\(_\|^\)\(.\)', '\u\2', 'g')`}.${3:method_name} == ${4:result}
    end

snippet ass
    assert ${1:`substitute(substitute(vim_snippets#Filename(), '_test$', '', ''), '\(_\|^\)\(.\)', '\u\2', 'g')`}.${2:method_name} == ${3:result}

snippet @mdoc
    @moduledoc """
    ${1:#:Print the FizzBuzz sequence from 1 to n#}

    ## Example

    ${2:    }iex> ${3:`substitute(substitute(vim_snippets#Filename(), '_test$', '', ''), '\(_\|^\)\(.\)', '\u\2', 'g')`}.${4:method_name}
    $2${5:#:1 2 Fizz 4 Buzz :#}

    """
    ${6}
snippet @doc
    @doc """
    ${1:#:Print the FizzBuzz sequence from 1 to n#}

    ## Example

    ${2:    }iex> ${3:`substitute(substitute(vim_snippets#Filename(), '_test$', '', ''), '\(_\|^\)\(.\)', '\u\2', 'g')`}.${4:method_name}
    $2${5:#:1 2 Fizz 4 Buzz :#}

    """
    ${6}

snippet eat
    alter table(:${1:tablename}) do
      ${2:"add_or_modify_or_remove"}
    end

snippet eai
    create index(:${1:table}, [:${2:columns}], name: ${3:name}, unique: true)
