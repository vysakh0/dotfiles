snippet fnn
    fn
      ${1:args} -> ${0}
    end

snippet tee
    test "${1:test_name}", %{conn: conn} do
     conn = ${2:type} conn, ${3:resource}_path(conn, :create), ${3}: @${4:valid_or_invalid}_attrs
     assert json_response(conn, 422)["errors"] != %{}
    end

snippet tjs
    test "${1:test_name}", %{conn: conn} do
     ${2:resource} = Repo.insert! %${3:model}{}
     conn = ${4:type} conn, $2_path(conn, :create), $2: @valid_attrs
     assert json_response(conn, 201)["data"]["id"]
     assert Repo.get_by($3, @valid_attrs)
    end

snippet tea
    test "${1:test_name}" do
        assert ${1:`substitute(substitute(vim_snippets#Filename(), '_test$', '', ''), '\(_\|^\)\(.\)', '\u\2', 'g')`}.${2:method_name} == ${3:result}
    end

snippet ass
    assert ${1:`substitute(substitute(vim_snippets#Filename(), '_test$', '', ''), '\(_\|^\)\(.\)', '\u\2', 'g')`}.${2:method_name} == ${3:result}

snippet tes
    test "${1:test_name}" do
     ${0}
    end
snippet @doc
    @doc """
    ${1:#:Print the FizzBuzz sequence from 1 to n#}

    ## Example

    ${2:    }iex> ${3:`substitute(substitute(vim_snippets#Filename(), '_test$', '', ''), '\(_\|^\)\(.\)', '\u\2', 'g')`}.${4:method_name}
    $2${5:#:1 2 Fizz 4 Buzz :#}

    """
    ${6}
