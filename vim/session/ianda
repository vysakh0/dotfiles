let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <expr> <Plug>(neocomplete_start_unite_complete) unite#sources#neocomplete#start_complete()
inoremap <silent> <expr> <Plug>(neocomplete_start_unite_quick_match) unite#sources#neocomplete#start_quick_match()
inoremap <silent> <Plug>(neocomplete_start_auto_complete) =neocomplete#mappings#popup_post()
inoremap <silent> <Plug>delimitMate< =delimitMate#ParenDelim(">")
inoremap <silent> <Plug>delimitMate> =delimitMate#JumpOut("\>")
inoremap <Plug>(EmmetAnchorizeSummary) :call emmet#anchorizeURL(1)a
inoremap <Plug>(EmmetAnchorizeURL) :call emmet#anchorizeURL(0)a
inoremap <Plug>(EmmetRemoveTag) :call emmet#removeTag()a
inoremap <Plug>(EmmetSplitJoinTag) :call emmet#splitJoinTag()
inoremap <Plug>(EmmetToggleComment) :call emmet#toggleComment()a
inoremap <Plug>(EmmetImageSize) :call emmet#imageSize()a
inoremap <Plug>(EmmetMovePrev) :call emmet#moveNextPrev(1)
inoremap <Plug>(EmmetMoveNext) :call emmet#moveNextPrev(0)
inoremap <Plug>(EmmetBalanceTagOutward) :call emmet#balanceTag(-1)
inoremap <Plug>(EmmetBalanceTagInward) :call emmet#balanceTag(1)
inoremap <Plug>(EmmetExpandWord) u:call emmet#expandAbbr(1,"")a
inoremap <Plug>(EmmetExpandAbbr) u:call emmet#expandAbbr(0,"")a
inoremap <silent> <Plug>delimitMateS-Tab =delimitMate#JumpAny()
inoremap <silent> <Plug>delimitMateSpace =delimitMate#ExpandSpace()
inoremap <silent> <Plug>delimitMateCR =delimitMate#ExpandReturn()
inoremap <silent> <expr> <Plug>delimitMateS-BS delimitMate#WithinEmptyPair() ? "\<Del>" : "\<S-BS>"
inoremap <silent> <Plug>delimitMateBS =delimitMate#BS()
inoremap <silent> <Plug>delimitMate` =delimitMate#QuoteDelim("\`")
inoremap <silent> <Plug>delimitMate' =delimitMate#QuoteDelim("\'")
inoremap <silent> <Plug>delimitMate" =delimitMate#QuoteDelim("\"")
inoremap <silent> <Plug>delimitMate] =delimitMate#JumpOut("\]")
inoremap <silent> <Plug>delimitMate} =delimitMate#JumpOut("\}")
inoremap <silent> <Plug>delimitMate) =delimitMate#JumpOut("\)")
inoremap <silent> <Plug>delimitMate[ =delimitMate#ParenDelim("]")
inoremap <silent> <Plug>delimitMate{ =delimitMate#ParenDelim("}")
inoremap <silent> <Plug>delimitMate( =delimitMate#ParenDelim(")")
inoremap <silent> <expr> <Plug>(neosnippet_start_unite_snippet) unite#sources#snippet#start_complete()
inoremap <silent> <expr> <Plug>(neosnippet_jump) neosnippet#jump_impl()
inoremap <silent> <expr> <Plug>(neosnippet_expand) neosnippet#expand_impl()
inoremap <silent> <expr> <Plug>(neosnippet_jump_or_expand) neosnippet#jump_or_expand_impl()
inoremap <silent> <expr> <Plug>(neosnippet_expand_or_jump) neosnippet#expand_or_jump_impl()
inoremap <silent> <Plug>(xmpfilter-mark) :call xmpfilter#toggle_mark('i')
inoremap <silent> <Plug>(xmpfilter-run) :call xmpfilter#run('i')
imap <silent> <Plug>IMAP_JumpBack =IMAP_Jumpfunc('b', 0)
imap <silent> <Plug>IMAP_JumpForward =IMAP_Jumpfunc('', 0)
inoremap <silent> <Plug>NERDCommenterInsert  <BS>:call NERDComment('i', "insert")
nmap  <Plug>DWMClose
snoremap  a<BS>
nnoremap <silent>  :TmuxNavigateLeft
xmap 	 <Plug>(neosnippet_expand_target)
smap <expr> 	 neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)": "\	"
xmap <NL> <Plug>IMAP_JumpForward
smap <NL> <Plug>IMAP_JumpForward
nnoremap <silent> <NL> :TmuxNavigateDown
nnoremap <silent>  :TmuxNavigateUp
nnoremap <silent>  :TmuxNavigateRight
snoremap  a<BS>
xnoremap <silent>  :call multiple_cursors#new("v")
nnoremap <silent>  :call multiple_cursors#new("n")
nmap  <Plug>DWMNew
nnoremap  g~iw
xmap c <Plug>(EmmetCodePretty)
xmap m <Plug>(EmmetMergeLines)
xmap D <Plug>(EmmetBalanceTagOutward)
xmap d <Plug>(EmmetBalanceTagInward)
xmap , <Plug>(EmmetExpandAbbr)
smap c <Plug>(EmmetCodePretty)
smap m <Plug>(EmmetMergeLines)
nmap A <Plug>(EmmetAnchorizeSummary)
nmap a <Plug>(EmmetAnchorizeURL)
nmap k <Plug>(EmmetRemoveTag)
nmap j <Plug>(EmmetSplitJoinTag)
nmap / <Plug>(EmmetToggleComment)
nmap i <Plug>(EmmetImageSize)
nmap N <Plug>(EmmetMovePrev)
nmap n <Plug>(EmmetMoveNext)
smap D <Plug>(EmmetBalanceTagOutward)
nmap D <Plug>(EmmetBalanceTagOutward)
smap d <Plug>(EmmetBalanceTagInward)
nmap d <Plug>(EmmetBalanceTagInward)
nmap ; <Plug>(EmmetExpandWord)
smap , <Plug>(EmmetExpandAbbr)
nmap , <Plug>(EmmetExpandAbbr)
nnoremap <silent>  :TmuxNavigatePrevious
nnoremap  d :Dispatch 
nmap   [unite]
nnoremap  h :hide
nnoremap $ g$
xmap ,a& :Tabularize /&
xmap ,a= :Tabularize /=
xmap ,a: :Tabularize /:
xmap ,a:: :Tabularize /:\zs
xmap ,a, :Tabularize /,
xnoremap ,m :m
xnoremap ,t :t
nnoremap ,qa :SSavey:qa
xnoremap <silent> ,,w :call EasyMotion#WB(1, 0)
xnoremap <silent> ,,t :call EasyMotion#T(1, 0)
xnoremap <silent> ,,n :call EasyMotion#Search(1, 0)
xnoremap <silent> ,,k :call EasyMotion#JK(1, 1)
xnoremap <silent> ,,j :call EasyMotion#JK(1, 0)
xnoremap <silent> ,,gE :call EasyMotion#EW(1, 1)
xnoremap <silent> ,,f :call EasyMotion#F(1, 0)
xnoremap <silent> ,,e :call EasyMotion#E(1, 0)
xnoremap <silent> ,,b :call EasyMotion#WB(1, 1)
xnoremap <silent> ,,W :call EasyMotion#WBW(1, 0)
xnoremap <silent> ,,T :call EasyMotion#T(1, 1)
xnoremap <silent> ,,N :call EasyMotion#Search(1, 1)
xnoremap <silent> ,,ge :call EasyMotion#E(1, 1)
xnoremap <silent> ,,F :call EasyMotion#F(1, 1)
xnoremap <silent> ,,E :call EasyMotion#EW(1, 0)
xnoremap <silent> ,,B :call EasyMotion#WBW(1, 1)
nmap <silent> ,bv :e ~/dotfiles/bundles.vim
nmap ,gt <Plug>(signify-toggle)
nmap ,gh <Plug>(signify-toggle-highlight)
nmap ,gk <Plug>(signify-prev-hunk)
nmap ,gj <Plug>(signify-next-hunk)
xmap ,Nr <Plug>NrrwrgnBangDo
xmap ,nr <Plug>NrrwrgnDo
snoremap <silent> ,,w :call EasyMotion#WB(1, 0)
onoremap <silent> ,,w :call EasyMotion#WB(0, 0)
nnoremap <silent> ,,w :call EasyMotion#WB(0, 0)
snoremap <silent> ,,t :call EasyMotion#T(1, 0)
onoremap <silent> ,,t :call EasyMotion#T(0, 0)
nnoremap <silent> ,,t :call EasyMotion#T(0, 0)
snoremap <silent> ,,n :call EasyMotion#Search(1, 0)
onoremap <silent> ,,n :call EasyMotion#Search(0, 0)
nnoremap <silent> ,,n :call EasyMotion#Search(0, 0)
snoremap <silent> ,,k :call EasyMotion#JK(1, 1)
onoremap <silent> ,,k :call EasyMotion#JK(0, 1)
nnoremap <silent> ,,k :call EasyMotion#JK(0, 1)
snoremap <silent> ,,j :call EasyMotion#JK(1, 0)
onoremap <silent> ,,j :call EasyMotion#JK(0, 0)
nnoremap <silent> ,,j :call EasyMotion#JK(0, 0)
snoremap <silent> ,,gE :call EasyMotion#EW(1, 1)
onoremap <silent> ,,gE :call EasyMotion#EW(0, 1)
nnoremap <silent> ,,gE :call EasyMotion#EW(0, 1)
snoremap <silent> ,,f :call EasyMotion#F(1, 0)
onoremap <silent> ,,f :call EasyMotion#F(0, 0)
nnoremap <silent> ,,f :call EasyMotion#F(0, 0)
snoremap <silent> ,,e :call EasyMotion#E(1, 0)
onoremap <silent> ,,e :call EasyMotion#E(0, 0)
nnoremap <silent> ,,e :call EasyMotion#E(0, 0)
snoremap <silent> ,,b :call EasyMotion#WB(1, 1)
onoremap <silent> ,,b :call EasyMotion#WB(0, 1)
nnoremap <silent> ,,b :call EasyMotion#WB(0, 1)
snoremap <silent> ,,W :call EasyMotion#WBW(1, 0)
onoremap <silent> ,,W :call EasyMotion#WBW(0, 0)
nnoremap <silent> ,,W :call EasyMotion#WBW(0, 0)
snoremap <silent> ,,T :call EasyMotion#T(1, 1)
onoremap <silent> ,,T :call EasyMotion#T(0, 1)
nnoremap <silent> ,,T :call EasyMotion#T(0, 1)
snoremap <silent> ,,N :call EasyMotion#Search(1, 1)
onoremap <silent> ,,N :call EasyMotion#Search(0, 1)
nnoremap <silent> ,,N :call EasyMotion#Search(0, 1)
snoremap <silent> ,,ge :call EasyMotion#E(1, 1)
onoremap <silent> ,,ge :call EasyMotion#E(0, 1)
nnoremap <silent> ,,ge :call EasyMotion#E(0, 1)
snoremap <silent> ,,F :call EasyMotion#F(1, 1)
onoremap <silent> ,,F :call EasyMotion#F(0, 1)
nnoremap <silent> ,,F :call EasyMotion#F(0, 1)
snoremap <silent> ,,E :call EasyMotion#EW(1, 0)
onoremap <silent> ,,E :call EasyMotion#EW(0, 0)
nnoremap <silent> ,,E :call EasyMotion#EW(0, 0)
snoremap <silent> ,,B :call EasyMotion#WBW(1, 1)
onoremap <silent> ,,B :call EasyMotion#WBW(0, 1)
nnoremap <silent> ,,B :call EasyMotion#WBW(0, 1)
nnoremap <silent> ,tfe :TableEvalFormulaLine
nnoremap <silent> ,tfa :TableAddFormula
nnoremap <silent> ,tdc :call tablemode#DeleteColumn()
nnoremap <silent> ,tdd :call tablemode#DeleteRow()
nnoremap <silent> ,tr :call tablemode#TableRealign('.')
xnoremap <silent> ,T :call tablemode#TableizeByDelimiter()
nnoremap <silent> ,tt :Tableize
xnoremap <silent> ,tt :Tableize
nnoremap <silent> ,tm :call tablemode#TableModeToggle()
nmap ,ca <Plug>NERDCommenterAltDelims
xmap ,cu <Plug>NERDCommenterUncomment
nmap ,cu <Plug>NERDCommenterUncomment
xmap ,cb <Plug>NERDCommenterAlignBoth
nmap ,cb <Plug>NERDCommenterAlignBoth
xmap ,cl <Plug>NERDCommenterAlignLeft
nmap ,cl <Plug>NERDCommenterAlignLeft
nmap ,cA <Plug>NERDCommenterAppend
xmap ,cy <Plug>NERDCommenterYank
nmap ,cy <Plug>NERDCommenterYank
xmap ,cs <Plug>NERDCommenterSexy
nmap ,cs <Plug>NERDCommenterSexy
xmap ,ci <Plug>NERDCommenterInvert
nmap ,ci <Plug>NERDCommenterInvert
nmap ,c$ <Plug>NERDCommenterToEOL
xmap ,cn <Plug>NERDCommenterNested
nmap ,cn <Plug>NERDCommenterNested
xmap ,cm <Plug>NERDCommenterMinimal
nmap ,cm <Plug>NERDCommenterMinimal
xmap ,c  <Plug>NERDCommenterToggle
nmap ,c  <Plug>NERDCommenterToggle
xmap ,cc <Plug>NERDCommenterComment
nmap ,cc <Plug>NERDCommenterComment
nnoremap ,s :%s/
nnoremap ,e :edit 
nnoremap ,te :tabedit 
nnoremap ,tc :tabclose
nnoremap ,tn :tabnew
nnoremap ,q :q
nnoremap ,x :x
nnoremap ,w :w
snoremap ,t :t
snoremap ,m :m
nnoremap ,d :Dispatch
vmap ,a| :Tabularize /|
nmap ,a| :Tabularize /|
smap ,a, :Tabularize /,
nmap ,a, :Tabularize /,
smap ,a:: :Tabularize /:\zs
nmap ,a:: :Tabularize /:\zs
smap ,a: :Tabularize /:
nmap ,a: :Tabularize /:
smap ,a= :Tabularize /=
nmap ,a= :Tabularize /=
smap ,a& :Tabularize /&
nmap ,a& :Tabularize /&
nnoremap <silent> ,gV :Gitv!
nnoremap <silent> ,gv :Gitv
nnoremap <silent> ,gr :Gremove
nnoremap <silent> ,gw :Gwrite
nnoremap <silent> ,gp :Git push
nnoremap <silent> ,gl :Glog
nnoremap <silent> ,gb :Gblame
nnoremap <silent> ,gc :Gcommit
nnoremap <silent> ,gd :Gdiff
nnoremap <silent> ,ga :Git add -A
nnoremap <silent> ,gs :Gstatus
nnoremap ,vb :vert ba
nnoremap ,tb :Tagbar
nnoremap ,  :noh 
nnoremap ,p :set paste!
nmap ,b ik$
nmap ,j oj0
nmap ,k Ok0
nmap <silent> ,bi :so $MYVIMRC:BundleInstall 
nmap <silent> ,ep :e ~/dotfiles/plugin_config.vim
nmap <silent> ,eb :e ~/dotfiles/bundles.vim
nmap <silent> ,sv :so $MYVIMRC
nmap <silent> ,ev :e $MYVIMRC
xnoremap / /\v
snoremap / /\v
nnoremap / /\v
nnoremap 0 g0
xmap S <Plug>VSurround
nnoremap Y y$
nmap [c <Plug>(signify-prev-hunk)
nnoremap <silent> [unite]fc :Unite file_rec/async
nnoremap <silent> [unite]fa :Unite -no-split -start-insert -auto-preview file_rec/async 
nnoremap <silent> [unite]fp :Unite file_rec/async -default-action=preview
nnoremap <silent> [unite]fv :Unite file_rec/async -default-action=vsplit
nnoremap <silent> [unite]fs :Unite file_rec/async -default-action=split
nnoremap <silent> [unite]ft :Unite file_rec/async -default-action=tabopen
nnoremap <silent> [unite]s :Unite -quick-match buffer
nnoremap <silent> [unite]/ :Unite -no-quit -buffer-name=search grep:.
nnoremap <silent> [unite]e :Unite -no-split -buffer-name=buffer  buffer
nnoremap <silent> [unite]y :Unite -no-split -buffer-name=yank    history/yank
nnoremap <silent> [unite]o :Unite -no-split -buffer-name=outline -start-insert outline
nnoremap <silent> [unite]r :Unite -no-split -buffer-name=mru     -start-insert file_mru
nnoremap <silent> [unite]f :Unite -no-split -buffer-name=files   -start-insert file
nnoremap <silent> [unite]t :Unite -no-split -buffer-name=files   -start-insert file_rec/async:! file_mru
nnoremap [unite] <Nop>
nmap ]c <Plug>(signify-next-hunk)
nmap cs <Plug>Csurround
nmap ds <Plug>Dsurround
nmap gx <Plug>NetrwBrowseX
xmap gS <Plug>VgSurround
nnoremap j gj
nnoremap k gk
onoremap <silent> tc :call tablemode#CellTextObject()
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
omap <F5> :setlocal spell! spelllang=en_us
xmap <F5> :setlocal spell! spelllang=en_us
nmap <F5> :setlocal spell! spelllang=en_us
onoremap <F2> :Tagbar
xnoremap <F2> :Tagbar
nnoremap <F2> :Tagbar
onoremap <F3> :NERDTreeToggle
xnoremap <F3> :NERDTreeToggle
nnoremap <F3> :NERDTreeToggle
xnoremap <SNR>97_VisualNrrwRgn :call nrrwrgn#VisualNrrwRgn(visualmode(),'')
xnoremap <SNR>97_VisualNrrwBang :call nrrwrgn#VisualNrrwRgn(visualmode(),'!')
snoremap <Left> bi
snoremap <Right> a
snoremap <Del> a<BS>
snoremap <BS> a<BS>
nnoremap <silent> <Plug>(n) :call multiple_cursors#new('v')
nnoremap <silent> <Plug>(s) :call multiple_cursors#skip()
nnoremap <silent> <Plug>(p) :call multiple_cursors#prev()
xnoremap <Plug>(EmmetCodePretty) :call emmet#codePretty()
xnoremap <Plug>(EmmetMergeLines) :call emmet#mergeLines()
xnoremap <Plug>(EmmetBalanceTagOutward) :call emmet#balanceTag(-2)
xnoremap <Plug>(EmmetBalanceTagInward) :call emmet#balanceTag(2)
xnoremap <Plug>(EmmetExpandAbbr) :call emmet#expandAbbr(2,"")
xmap <Plug>SendSelectionToTmux "ry :call Send_to_Tmux(@r)
xnoremap <silent> <Plug>(xmpfilter-mark) :call xmpfilter#toggle_mark('v')
xnoremap <silent> <Plug>(xmpfilter-run) :call xmpfilter#run('v')
xmap <silent> <Plug>IMAP_JumpBack `<i=IMAP_Jumpfunc('b', 0)
xmap <silent> <Plug>IMAP_JumpForward i=IMAP_Jumpfunc('', 0)
xmap <silent> <Plug>IMAP_DeleteAndJumpBack "_<Del>i=IMAP_Jumpfunc('b', 0)
xmap <silent> <Plug>IMAP_DeleteAndJumpForward "_<Del>i=IMAP_Jumpfunc('', 0)
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
snoremap <Plug>(EmmetCodePretty) :call emmet#codePretty()
snoremap <Plug>(EmmetMergeLines) :call emmet#mergeLines()
nnoremap <Plug>(EmmetAnchorizeSummary) :call emmet#anchorizeURL(1)
nnoremap <Plug>(EmmetAnchorizeURL) :call emmet#anchorizeURL(0)
nnoremap <Plug>(EmmetRemoveTag) :call emmet#removeTag()
nnoremap <Plug>(EmmetSplitJoinTag) :call emmet#splitJoinTag()
nnoremap <Plug>(EmmetToggleComment) :call emmet#toggleComment()
nnoremap <Plug>(EmmetImageSize) :call emmet#imageSize()
nnoremap <Plug>(EmmetMovePrev) :call emmet#moveNextPrev(1)
nnoremap <Plug>(EmmetMoveNext) :call emmet#moveNextPrev(0)
snoremap <Plug>(EmmetBalanceTagOutward) :call emmet#balanceTag(-2)
nnoremap <Plug>(EmmetBalanceTagOutward) :call emmet#balanceTag(-1)
snoremap <Plug>(EmmetBalanceTagInward) :call emmet#balanceTag(2)
nnoremap <Plug>(EmmetBalanceTagInward) :call emmet#balanceTag(1)
nnoremap <Plug>(EmmetExpandWord) :call emmet#expandAbbr(1,"")
snoremap <Plug>(EmmetExpandAbbr) :call emmet#expandAbbr(2,"")
nnoremap <Plug>(EmmetExpandAbbr) :call emmet#expandAbbr(3,"")
nnoremap <silent> <Plug>(signify-toggle) :call sy#toggle()
nnoremap <silent> <Plug>(signify-toggle-highlight) :call sy#highlight#line_toggle()
nnoremap <silent> <expr> <Plug>(signify-prev-hunk) &diff ? '[c' : ":\call sy#jump#prev_hunk(v:count1)\"
nnoremap <silent> <expr> <Plug>(signify-next-hunk) &diff ? ']c' : ":\call sy#jump#next_hunk(v:count1)\"
nmap <Plug>NormalModeSendToTmux vip <Plug>SendSelectionToTmux
smap <Plug>SendSelectionToTmux "ry :call Send_to_Tmux(@r)
xnoremap <SNR>96_VisualNrrwBang :call nrrwrgn#VisualNrrwRgn(visualmode(),'!')
xnoremap <SNR>96_VisualNrrwRgn :call nrrwrgn#VisualNrrwRgn(visualmode(),'')
xnoremap <silent> <Plug>(neosnippet_register_oneshot_snippet) :call neosnippet#register_oneshot_snippet()
xnoremap <silent> <expr> <Plug>(neosnippet_start_unite_snippet_target) unite#sources#snippet_target#start()
xnoremap <silent> <Plug>(neosnippet_expand_target) :call neosnippet#expand_target()
xnoremap <silent> <Plug>(neosnippet_get_selected_text) :call neosnippet#get_selected_text(visualmode(), 1)
snoremap <silent> <expr> <Plug>(neosnippet_jump) neosnippet#jump_impl()
snoremap <silent> <expr> <Plug>(neosnippet_expand) neosnippet#expand_impl()
snoremap <silent> <expr> <Plug>(neosnippet_jump_or_expand) neosnippet#jump_or_expand_impl()
snoremap <silent> <expr> <Plug>(neosnippet_expand_or_jump) neosnippet#expand_or_jump_impl()
nnoremap <silent> <Plug>SIG_PrevMarkerByType :call signature#GotoMarker("prev")
nnoremap <silent> <Plug>SIG_NextMarkerByType :call signature#GotoMarker("next")
nnoremap <silent> <Plug>SIG_PrevLineByPos :call signature#GotoMark("pos", "prev", "line")
nnoremap <silent> <Plug>SIG_NextLineByPos :call signature#GotoMark("pos", "next", "line")
nnoremap <silent> <Plug>SIG_PrevSpotByPos :call signature#GotoMark("pos", "prev", "spot")
nnoremap <silent> <Plug>SIG_NextSpotByPos :call signature#GotoMark("pos", "next", "spot")
nnoremap <silent> <Plug>SIG_PrevLineByAlpha :call signature#GotoMark("alpha", "prev", "line")
nnoremap <silent> <Plug>SIG_NextLineByAlpha :call signature#GotoMark("alpha", "next", "line")
nnoremap <silent> <Plug>SIG_PrevSpotByAlpha :call signature#GotoMark("alpha", "prev", "spot")
nnoremap <silent> <Plug>SIG_NextSpotByAlpha :call signature#GotoMark("alpha", "next", "spot")
nnoremap <silent> <Plug>SIG_PurgeMarkers :call signature#PurgeMarkers()
nnoremap <silent> <Plug>SIG_PurgeMarks :call signature#PurgeMarks()
nnoremap <silent> <Plug>SIG_PlaceNextMark :call signature#Input(",")
snoremap <silent> <Plug>(xmpfilter-mark) :call xmpfilter#toggle_mark('v')
nnoremap <silent> <Plug>(xmpfilter-mark) :call xmpfilter#toggle_mark('n')
snoremap <silent> <Plug>(xmpfilter-run) :call xmpfilter#run('v')
nnoremap <silent> <Plug>(xmpfilter-run) :call xmpfilter#run('n')
smap <silent> <Plug>IMAP_JumpBack `<i=IMAP_Jumpfunc('b', 0)
smap <silent> <Plug>IMAP_JumpForward i=IMAP_Jumpfunc('', 0)
smap <silent> <Plug>IMAP_DeleteAndJumpBack "_<Del>i=IMAP_Jumpfunc('b', 0)
smap <silent> <Plug>IMAP_DeleteAndJumpForward "_<Del>i=IMAP_Jumpfunc('', 0)
nmap <silent> <Plug>IMAP_JumpBack i=IMAP_Jumpfunc('b', 0)
nmap <silent> <Plug>IMAP_JumpForward i=IMAP_Jumpfunc('', 0)
nmap <C-Space> <Plug>DWMFocus
nmap <Nul> <Plug>DWMFocus
nmap <C-.> <Plug>DWMRotateClockwise
nmap <C-,> <Plug>DWMRotateCounterclockwise
nnoremap <silent> <Plug>DWMShrinkMaster :call DWM_ShrinkMaster()
nnoremap <silent> <Plug>DWMGrowMaster :call DWM_GrowMaster()
nnoremap <silent> <Plug>DWMFocus :call DWM_Focus()
nnoremap <silent> <Plug>DWMClose :exec DWM_Close()
nnoremap <silent> <Plug>DWMNew :call DWM_New()
nnoremap <silent> <Plug>DWMRotateClockwise :call DWM_Rotate(1)
nnoremap <silent> <Plug>DWMRotateCounterclockwise :call DWM_Rotate(0)
xnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("x", "Uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("n", "Uncomment")
xnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("x", "AlignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("n", "AlignBoth")
xnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("x", "AlignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("n", "AlignLeft")
nnoremap <silent> <Plug>NERDCommenterAppend :call NERDComment("n", "Append")
xnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("x", "Yank")
nnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("n", "Yank")
xnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("x", "Sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("n", "Sexy")
xnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("x", "Invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("n", "Invert")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment("n", "ToEOL")
xnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("x", "Nested")
nnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("n", "Nested")
xnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("x", "Minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("n", "Minimal")
xnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("x", "Toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("n", "Toggle")
xnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("x", "Comment")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("n", "Comment")
nnoremap <silent> <Plug>SurroundRepeat .
nnoremap <Down> :resize -5
nnoremap <Up> :resize +5
nnoremap <Right> :vertical resize -5
nnoremap <Left> :vertical resize +5
nnoremap <F8> :UndotreeToggle
nnoremap <F9> :NumbersToggle
snoremap <F3> :NERDTreeToggle
snoremap <F2> :Tagbar
smap <F5> :setlocal spell! spelllang=en_us
imap  < ActiveRecord::Base
imap S <Plug>ISurround
imap s <Plug>Isurround
imap <expr> 	 neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)": pumvisible() ? "\" : "\	"
imap <NL> <Plug>IMAP_JumpForward
imap  <Plug>DiscretionaryEnd
imap  <Plug>Isurround
inoremap  u
inoremap  u
imap  <Plug>AlwaysEnd
imap A <Plug>(EmmetAnchorizeSummary)
imap a <Plug>(EmmetAnchorizeURL)
imap k <Plug>(EmmetRemoveTag)
imap j <Plug>(EmmetSplitJoinTag)
imap / <Plug>(EmmetToggleComment)
imap i <Plug>(EmmetImageSize)
imap N <Plug>(EmmetMovePrev)
imap n <Plug>(EmmetMoveNext)
imap D <Plug>(EmmetBalanceTagOutward)
imap d <Plug>(EmmetBalanceTagInward)
imap ; <Plug>(EmmetExpandWord)
imap , <Plug>(EmmetExpandAbbr)
cmap w!! w !sudo tee % >/dev/null
iabbr rmp require 'minitest/pride'
iabbr rmi require 'minitest/autorun'
cnoreabbr qa :SSavey:qa
cabbr grtoggle GoldenRatioToggle
cabbr grresize GoldenRatioResize
cabbr gitv =(getcmdtype()==':' && getcmdpos()==1 ? 'Gitv' : 'gitv')
cnoreabbr rx Rextract
cnoreabbr rv Rview
cnoreabbr rview Rview
cnoreabbr rmo Rmo
cnoreabbr rco Rco
cnoreabbr Q q
cnoreabbr X x
cnoreabbr WQ wq
cnoreabbr W w
cnoreabbr Wq w
iabbr lorem Lorem ipsum dolor sit amet, consectetur adipiscing elit.Vestibulum bibendum hendrerit ante.Phasellus vitae enim id erat fringilla fermentum.Pellentesque tellus. Cras eros magna, pretium ac, tincidunt id, tincidunt eget, mi.Fusce tristique sollicitudin eros. Nam augue nisi, volutpat non, cursus a, aliquam ac, magna.Sed rhoncus, ipsum vitae semper ultrices, ante nunc faucibus nunc, sed iaculis elit metus condimentum turpis.Suspendisse suscipit. Nulla eget nulla. Aliquam varius sem quis tortor. Proin eu dolor a lacus lobortis luctus.Phasellus interdum. Maecenas quis sem. Nulla facilisi.
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set autowriteall
set background=dark
set backspace=indent,eol,start
set completefunc=neocomplete#complete#manual_complete
set completeopt=preview,menuone
set copyindent
set dictionary=/usr/share/dict/words
set errorformat=Error:\ In\ %f\\,\ %m\ on\ line\ %l,Error:\ In\ %f\\,\ Parse\ error\ on\ line\ %l:\ %m,SyntaxError:\ In\ %f\\,\ %m,%-G%.%#
set expandtab
set fileencodings=ucs-bom,utf-8,default,latin1
set helplang=en
set hidden
set history=1000
set hlsearch
set ignorecase
set incsearch
set isident=@,48-57,_,192-255,$
set lazyredraw
set listchars=eol:$,conceal:Δ
set pastetoggle=<F6>
set runtimepath=~/.vim/bundle/vundle,~/.vim/bundle/vim-fugitive,~/.vim/bundle/vim-surround,~/.vim/bundle/webapi-vim,~/.vim/bundle/Gist.vim,~/.vim/bundle/tagbar,~/.vim/bundle/ack.vim,~/.vim/bundle/nerdcommenter,~/.vim/bundle/nerdtree,~/.vim/bundle/vim-colors-solarized,~/.vim/bundle/vim-endwise,~/.vim/bundle/vim-rails,~/.vim/bundle/vim-rake,~/.vim/bundle/vim-ruby,~/.vim/bundle/rspec.vim,~/.vim/bundle/vim-markdown,~/.vim/bundle/vim-markdown-folding,~/.vim/bundle/vim-snippets,~/.vim/bundle/numbers.vim,~/.vim/bundle/dwm.vim,~/.vim/bundle/vim-multiple-cursors,~/.vim/bundle/vim-latex,~/.vim/bundle/vim-ruby-xmpfilter,~/.vim/bundle/vim-signature,~/.vim/bundle/unite.vim,~/.vim/bundle/vim-table-mode,~/.vim/bundle/undotree,~/.vim/bundle/vim-airline,~/.vim/bundle/numbers.vim,~/.vim/bundle/vim-easymotion,~/.vim/bundle/unite-outline,~/.vim/bundle/vim-startify,~/.vim/bundle/syntastic,~/.vim/bundle/vimproc,~/.vim/bundle/vim-tmux-navigator,~/.vim/bundle/html5.vim,~/.vim/bundle/indentLine,~/.vim/bundle/neocomplete,~/.vim/bundle/neosnippet,~/.vim/bundle/clang_complete,~/.vim/bundle/vim-addon-mw-utils,~/.vim/bundle/tlib_vim,~/.vim/bundle/tabular,~/.vim/bundle/vim-bufferline,~/.vim/bundle/delimitMate,~/.vim/bundle/gitv,~/.vim/bundle/NrrwRgn,~/.vim/bundle/golden-ratio,~/.vim/bundle/vim-coffee-script,~/.vim/bundle/vim-css-color,~/.vim/bundle/base16-vim,~/.vim/bundle/tslime.vim,~/.vim/bundle/vim-dispatch,~/.vim/bundle/vim-signify,~/.vim/bundle/emmet-vim,~/.vim/bundle/vundle,~/.vim/bundle/vim-fugitive,~/.vim/bundle/vim-surround,~/.vim/bundle/webapi-vim,~/.vim/bundle/Gist.vim,~/.vim/bundle/tagbar,~/.vim/bundle/ack.vim,~/.vim/bundle/nerdcommenter,~/.vim/bundle/nerdtree,~/.vim/bundle/vim-colors-solarized,~/.vim/bundle/vim-endwise,~/.vim/bundle/vim-rails,~/.vim/bundle/vim-rake,~/.vim/bundle/vim-ruby,~/.vim/bundle/rspec.vim,~/.vim/bundle/vim-markdown,~/.vim/bundle/vim-markdown-folding,~/.vim/bundle/vim-snippets,~/.vim/bundle/numbers.vim,~/.vim/bundle/dwm.vim,~/.vim/bundle/vim-multiple-cursors,~/.vim/bundle/vim-latex,~/.vim/bundle/vim-ruby-xmpfilter,~/.vim/bundle/vim-signature,~/.vim/bundle/unite.vim,~/.vim/bundle/vim-table-mode,~/.vim/bundle/undotree,~/.vim/bundle/vim-airline,~/.vim/bundle/numbers.vim,~/.vim/bundle/vim-easymotion,~/.vim/bundle/unite-outline,~/.vim/bundle/vim-startify,~/.vim/bundle/syntastic,~/.vim/bundle/vimproc,~/.vim/bundle/vim-tmux-navigator,~/.vim/bundle/html5.vim,~/.vim/bundle/indentLine,~/.vim/bundle/neocomplete,~/.vim/bundle/neosnippet,~/.vim/bundle/clang_complete,~/.vim/bundle/vim-addon-mw-utils,~/.vim/bundle/tlib_vim,~/.vim/bundle/tabular,~/.vim/bundle/vim-bufferline,~/.vim/bundle/delimitMate,~/.vim/bundle/gitv,~/.vim/bundle/NrrwRgn,~/.vim/bundle/golden-ratio,~/.vim/bundle/vim-coffee-script,~/.vim/bundle/vim-css-color,~/.vim/bundle/base16-vim,~/.vim/bundle/tslime.vim,~/.vim/bundle/vim-dispatch,~/.vim/bundle/vim-signify,~/.vim/bundle/emmet-vim,~/.vim/bundle/vundle,~/.vim/bundle/vim-fugitive,~/.vim/bundle/vim-surround,~/.vim/bundle/webapi-vim,~/.vim/bundle/Gist.vim,~/.vim/bundle/tagbar,~/.vim/bundle/ack.vim,~/.vim/bundle/nerdcommenter,~/.vim/bundle/nerdtree,~/.vim/bundle/vim-colors-solarized,~/.vim/bundle/vim-endwise,~/.vim/bundle/vim-rails,~/.vim/bundle/vim-rake,~/.vim/bundle/vim-ruby,~/.vim/bundle/rspec.vim,~/.vim/bundle/vim-markdown,~/.vim/bundle/vim-markdown-folding,~/.vim/bundle/vim-snippets,~/.vim/bundle/numbers.vim,~/.vim/bundle/dwm.vim,~/.vim/bundle/vim-multiple-cursors,~/.vim/bundle/vim-latex,~/.vim/bundle/vim-ruby-xmpfilter,~/.vim/bundle/vim-signature,~/.vim/bundle/unite.vim,~/.vim/bundle/vim-table-mode,~/.vim/bundle/undotree,~/.vim/bundle/vim-airline,~/.vim/bundle/numbers.vim,~/.vim/bundle/vim-easymotion,~/.vim/bundle/unite-outline,~/.vim/bundle/vim-startify,~/.vim/bundle/syntastic,~/.vim/bundle/vimproc,~/.vim/bundle/vim-tmux-navigator,~/.vim/bundle/html5.vim,~/.vim/bundle/indentLine,~/.vim/bundle/neocomplete,~/.vim/bundle/neosnippet,~/.vim/bundle/clang_complete,~/.vim/bundle/vim-addon-mw-utils,~/.vim/bundle/tlib_vim,~/.vim/bundle/tabular,~/.vim/bundle/vim-bufferline,~/.vim/bundle/delimitMate,~/.vim/bundle/gitv,~/.vim/bundle/NrrwRg
set scrolloff=3
set shiftround
set shiftwidth=4
set showmatch
set smarttab
set softtabstop=4
set statusline=%{bufferline#generate_string()}
set noswapfile
set tabstop=4
set title
set undodir=~/.vim/undodir
set undofile
set virtualedit=onemore
set wildignore=*.o,*.obj,*~,*DS_Store*,vendor/rails/**,vendor/cache/**,*.gem,log/**,tmp/**,*.png,*.jpg,*.gif,*.so,*.swp,*.zip,*/.Trash/**,*.pdf,*.dmg,*/Library/**,*/.rbenv/**,*/.nx/**,*.app
set wildmenu
set wildmode=list:longest,full
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/ianda
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 app/models/policy_extra_pricing.rb
badd +1 ~/todo
badd +196 ~/.vimrc
badd +1 ~/dotfiles/plugin_config.vim
badd +179 ~/dotfiles/bundles.vim
badd +64 app/models/concerns/package_price_calc.rb
badd +1 app/controllers/user_flow_controller.rb
badd +1 app/views/compare_sites/_matrix_block.html.erb
badd +1 app/views/compare_sites/_form.html.erb
badd +18 app/views/compare_sites/index.html.erb
badd +1 app/views/compare_sites/create.js.erb
badd +1 app/views/compare_sites/search_matrix.js.erb
badd +5 app/views/compare_sites/_compare_site_list.html.erb
badd +2 app/controllers/compare_controller.rb
badd +78 app/controllers/compare_sites_controller.rb
badd +18 app/models/compare_site.rb
badd +1 config/routes.rb
badd +1 app/views/trips/index.html.erb
badd +6 app/views/packages/_form.html.erb
badd +1 app/views/packages/_matrix_block.html.erb
badd +29 app/views/packages/_pricings_trip.html.erb
badd +1 app/views/packages/index.html.erb
badd +1 app/views/packages/matrices.html.erb
badd +1 app/controllers/trip_multipliers_controller.rb
badd +1 app/controllers/packages_controller.rb
badd +16 app/models/compare_site_package.rb
badd +1 \*unite\*\ -\ yank
badd +1 app/views/packages/search_matrix.js.erb
badd +73 app/views/packages/compare_site_matrices.html.erb
badd +7 app/views/packages/_matrix_block_compare_site.html.erb
badd +4 app/views/packages/_compare_pricings.html.erb
badd +3 lib/tasks/b_trip.rake
badd +1 lib/tasks/insure.rake
badd +1 lib/tasks/policy_extra_pricings.rake
badd +3 app/views/compare_sites/show.html.erb
badd +1 db/migrate/20130714174842_create_compare_site_packages.rb
badd +1 app/views/compare_sites/compare_search_matrix.js.erb
badd +1 app/assets/javascripts/compare.js.coffee
badd +1 app/assets/javascripts/calculate_policy_extras.js.coffee
badd +1 app/assets/javascripts/best_in.js.coffee
badd +10 app/assets/javascripts/backoffice.js
badd +4 app/assets/javascripts/filtering.js.coffee
badd +1 app/views/packages/compare_search_matrix.js.erb
badd +12 app/models/packages_pricing.rb
badd +2 app/views/packages/show.html.erb
badd +1 ~/dotfiles/auto_cmd.vim
badd +13 app/views/covers/_form.html.erb
badd +1 app/views/compare_pricings/_form.html.erb
badd +1 app/views/compare_pricings/new.html.erb
badd +1 app/views/covers/new.html.erb
badd +33 app/controllers/covers_controller.rb
badd +48 app/views/trips/show.html.erb
badd +6 app/views/destinations/_form.html.erb
badd +33 app/controllers/destinations_controller.rb
badd +24 app/views/admin/_header.html.erb
badd +1 app/views/covers_limits/_form.html.erb
badd +10 app/views/covers_limits/index.html.erb
badd +33 app/controllers/covers_limits_controller.rb
badd +1 app/views/covers_limits/new.html.erb
badd +2 app/views/covers_limits_pricings/index.html.erb
badd +15 app/views/covers_limits_pricings/_form.html.erb
badd +101 Gemfile
badd +4 app/models/covers_limit.rb
badd +1 app/views/covers_limits_pricings/new.html.erb
badd +1 app/views/covers_limits_pricings/show.html.erb
badd +5 app/views/covers/index.html.erb
badd +8 app/views/policy_extras/index.html.erb
badd +8 app/views/policy_extras/_form.html.erb
badd +1 app/controllers/policy_extras_controller.rb
silent! argdel *
edit app/controllers/policy_extras_controller.rb
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <S-Tab> <Plug>delimitMateS-Tab
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =delimitMate#JumpMany()
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> '[ <Plug>SIG_PrevLineByAlpha
nmap <buffer> '] <Plug>SIG_NextLineByAlpha
nmap <buffer> [- <Plug>SIG_PrevMarkerByType
nmap <buffer> [` <Plug>SIG_PrevSpotByPos
nmap <buffer> [' <Plug>SIG_PrevLineByPos
nmap <buffer> ]- <Plug>SIG_NextMarkerByType
nmap <buffer> ]` <Plug>SIG_NextSpotByPos
nmap <buffer> ]' <Plug>SIG_NextLineByPos
nmap <buffer> `[ <Plug>SIG_PrevSpotByAlpha
nmap <buffer> `] <Plug>SIG_NextSpotByAlpha
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nmap <buffer> m<BS> <Plug>SIG_PurgeMarkers
nmap <buffer> m  <Plug>SIG_PurgeMarks
nmap <buffer> m, <Plug>SIG_PlaceNextMark
nnoremap <buffer> <silent> m :call signature#Input()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
set concealcursor=i
setlocal concealcursor=i
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=neocomplete#complete#manual_complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent(v:lnum)
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=else,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,$,-
setlocal keywordprg=ri
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=lib,vendor,app/models/concerns,app/controllers/concerns,app/controllers,app/helpers,app/mailers,app/models,app/*,app/views,app/views/policy_extras,public,spec,spec/controllers,spec/helpers,spec/mailers,spec/models,spec/views,spec/lib,spec/features,spec/requests,spec/integration,vendor/plugins/*/lib,vendor/plugins/*/test,vendor/rails/*/lib,vendor/rails/*/test,~/ianda,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%{airline#update_highlight()}%#Al2#%(\ %{get(w:,\ \"airline_current_mode\",\ \"\")}\ %)%{g:airline_detect_paste\ &&\ &paste\ ?\ g:airline_paste_symbol.\"\ \"\ :\ \"\"}%#Al3#>%#Al4#%(\ %{get(w:,\ \"airline_current_branch\",\ \"\")}\ %)%#Al5#>%#Al6#%<%(\ %{bufferline#refresh_status()}%#AlBl_inactive#%{g:bufferline_status_info.before}%#AlBl_active#\ %{g:bufferline_status_info.current}\ %#AlBl_inactive#%{g:bufferline_status_info.after}\ %)\ %#Al7#%(%{&ro\ ?\ g:airline_readonly_symbol\ :\ ''}%)%#Al6#%#Al6#%=%(\ %(%{get(w:,\"airline_active\",0)\ ?\ tagbar#currenttag(\"%s\",\"\")\ :\ \"\"}\ <\ %)%{strlen(&filetype)>0?&filetype:''}\ %)%#Al5#<%#Al4#%(\ %{strlen(&fenc)>0?&fenc:''}%{strlen(&ff)>0?'['.&ff.']':''}\ %)%#Al3#<%#Al2#%(\ %3p%%\ :%3l:%3c\ %)%(%#Al2_to_warningmsg#<%#warningmsg#\ %#warningmsg#%{SyntasticStatuslineFlag()}%{airline#extensions#whitespace#check()}%)
setlocal suffixesadd=.rb
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=2
setlocal tags=~/ianda/tags,~/ianda/tmp/tags,./tags,./TAGS,tags,TAGS,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
2
normal! zo
let s:l = 9 - ((3 * winheight(0) + 21) / 42)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
9
normal! 035|
lcd ~/ianda
tabedit ~/ianda/app/controllers/covers_controller.rb
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <S-Tab> <Plug>delimitMateS-Tab
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =delimitMate#JumpMany()
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> '[ <Plug>SIG_PrevLineByAlpha
nmap <buffer> '] <Plug>SIG_NextLineByAlpha
nmap <buffer> [- <Plug>SIG_PrevMarkerByType
nmap <buffer> [` <Plug>SIG_PrevSpotByPos
nmap <buffer> [' <Plug>SIG_PrevLineByPos
nmap <buffer> ]- <Plug>SIG_NextMarkerByType
nmap <buffer> ]` <Plug>SIG_NextSpotByPos
nmap <buffer> ]' <Plug>SIG_NextLineByPos
nmap <buffer> `[ <Plug>SIG_PrevSpotByAlpha
nmap <buffer> `] <Plug>SIG_NextSpotByAlpha
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nmap <buffer> m<BS> <Plug>SIG_PurgeMarkers
nmap <buffer> m  <Plug>SIG_PurgeMarks
nmap <buffer> m, <Plug>SIG_PlaceNextMark
nnoremap <buffer> <silent> m :call signature#Input()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
set concealcursor=i
setlocal concealcursor=i
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=neocomplete#complete#auto_complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent(v:lnum)
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=else,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,$,-
setlocal keywordprg=ri
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=lib,vendor,app/models/concerns,app/controllers/concerns,app/controllers,app/helpers,app/mailers,app/models,app/*,app/views,app/views/covers,public,spec,spec/controllers,spec/helpers,spec/mailers,spec/models,spec/views,spec/lib,spec/features,spec/requests,spec/integration,vendor/plugins/*/lib,vendor/plugins/*/test,vendor/rails/*/lib,vendor/rails/*/test,~/ianda,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%{airline#update_highlight()}%#Al2#%(\ %{get(w:,\ \"airline_current_mode\",\ \"\")}\ %)%{g:airline_detect_paste\ &&\ &paste\ ?\ g:airline_paste_symbol.\"\ \"\ :\ \"\"}%#Al3#>%#Al4#%(\ %{get(w:,\ \"airline_current_branch\",\ \"\")}\ %)%#Al5#>%#Al6#%<%(\ %{bufferline#refresh_status()}%#AlBl_inactive#%{g:bufferline_status_info.before}%#AlBl_active#\ %{g:bufferline_status_info.current}\ %#AlBl_inactive#%{g:bufferline_status_info.after}\ %)\ %#Al7#%(%{&ro\ ?\ g:airline_readonly_symbol\ :\ ''}%)%#Al6#%#Al6#%=%(\ %(%{get(w:,\"airline_active\",0)\ ?\ tagbar#currenttag(\"%s\",\"\")\ :\ \"\"}\ <\ %)%{strlen(&filetype)>0?&filetype:''}\ %)%#Al5#<%#Al4#%(\ %{strlen(&fenc)>0?&fenc:''}%{strlen(&ff)>0?'['.&ff.']':''}\ %)%#Al3#<%#Al2#%(\ %3p%%\ :%3l:%3c\ %)%(%#Al2_to_warningmsg#<%#warningmsg#\ %#warningmsg#%{SyntasticStatuslineFlag()}%{airline#extensions#whitespace#check()}%)
setlocal suffixesadd=.rb
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=2
setlocal tags=~/ianda/tags,~/ianda/tmp/tags,./tags,./TAGS,tags,TAGS,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
2
normal! zo
let s:l = 60 - ((28 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
60
normal! 05|
lcd ~/ianda
tabedit ~/ianda/app/controllers/compare_sites_controller.rb
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <S-Tab> <Plug>delimitMateS-Tab
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =delimitMate#JumpMany()
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> '[ <Plug>SIG_PrevLineByAlpha
nmap <buffer> '] <Plug>SIG_NextLineByAlpha
nmap <buffer> [- <Plug>SIG_PrevMarkerByType
nmap <buffer> [` <Plug>SIG_PrevSpotByPos
nmap <buffer> [' <Plug>SIG_PrevLineByPos
nmap <buffer> ]- <Plug>SIG_NextMarkerByType
nmap <buffer> ]` <Plug>SIG_NextSpotByPos
nmap <buffer> ]' <Plug>SIG_NextLineByPos
nmap <buffer> `[ <Plug>SIG_PrevSpotByAlpha
nmap <buffer> `] <Plug>SIG_NextSpotByAlpha
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nmap <buffer> m<BS> <Plug>SIG_PurgeMarkers
nmap <buffer> m  <Plug>SIG_PurgeMarks
nmap <buffer> m, <Plug>SIG_PlaceNextMark
nnoremap <buffer> <silent> m :call signature#Input()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
set concealcursor=i
setlocal concealcursor=i
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=neocomplete#complete#auto_complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent(v:lnum)
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=else,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=ri
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=lib,vendor,app/models/concerns,app/controllers/concerns,app/controllers,app/helpers,app/mailers,app/models,app/*,app/views,app/views/compare_sites,public,spec,spec/controllers,spec/helpers,spec/mailers,spec/models,spec/views,spec/lib,spec/features,spec/requests,spec/integration,vendor/plugins/*/lib,vendor/plugins/*/test,vendor/rails/*/lib,vendor/rails/*/test,~/ianda,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%{airline#update_highlight()}%#Al2#%(\ %{get(w:,\ \"airline_current_mode\",\ \"\")}\ %)%{g:airline_detect_paste\ &&\ &paste\ ?\ g:airline_paste_symbol.\"\ \"\ :\ \"\"}%#Al3#>%#Al4#%(\ %{get(w:,\ \"airline_current_branch\",\ \"\")}\ %)%#Al5#>%#Al6#%<%(\ %{bufferline#refresh_status()}%#AlBl_inactive#%{g:bufferline_status_info.before}%#AlBl_active#\ %{g:bufferline_status_info.current}\ %#AlBl_inactive#%{g:bufferline_status_info.after}\ %)\ %#Al7#%(%{&ro\ ?\ g:airline_readonly_symbol\ :\ ''}%)%#Al6#%#Al6#%=%(\ %(%{get(w:,\"airline_active\",0)\ ?\ tagbar#currenttag(\"%s\",\"\")\ :\ \"\"}\ <\ %)%{strlen(&filetype)>0?&filetype:''}\ %)%#Al5#<%#Al4#%(\ %{strlen(&fenc)>0?&fenc:''}%{strlen(&ff)>0?'['.&ff.']':''}\ %)%#Al3#<%#Al2#%(\ %3p%%\ :%3l:%3c\ %)%(%#Al2_to_warningmsg#<%#warningmsg#\ %#warningmsg#%{SyntasticStatuslineFlag()}%{airline#extensions#whitespace#check()}%)
setlocal suffixesadd=.rb
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=2
setlocal tags=~/ianda/tags,~/ianda/tmp/tags,~/ianda/.git/ruby.tags,~/ianda/.git/tags,./tags,./TAGS,tags,TAGS,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
2
normal! zo
15
normal! zo
35
normal! zo
38
normal! zo
54
normal! zo
let s:l = 19 - ((18 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
19
normal! 019|
lcd ~/ianda
tabedit ~/ianda/config/routes.rb
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 64 + 84) / 168)
exe 'vert 2resize ' . ((&columns * 103 + 84) / 168)
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <S-Tab> <Plug>delimitMateS-Tab
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =delimitMate#JumpMany()
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> '[ <Plug>SIG_PrevLineByAlpha
nmap <buffer> '] <Plug>SIG_NextLineByAlpha
nmap <buffer> [- <Plug>SIG_PrevMarkerByType
nmap <buffer> [` <Plug>SIG_PrevSpotByPos
nmap <buffer> [' <Plug>SIG_PrevLineByPos
nmap <buffer> ]- <Plug>SIG_NextMarkerByType
nmap <buffer> ]` <Plug>SIG_NextSpotByPos
nmap <buffer> ]' <Plug>SIG_NextLineByPos
nmap <buffer> `[ <Plug>SIG_PrevSpotByAlpha
nmap <buffer> `] <Plug>SIG_NextSpotByAlpha
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nmap <buffer> m<BS> <Plug>SIG_PurgeMarkers
nmap <buffer> m  <Plug>SIG_PurgeMarks
nmap <buffer> m, <Plug>SIG_PlaceNextMark
nnoremap <buffer> <silent> m :call signature#Input()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
set concealcursor=i
setlocal concealcursor=i
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=neocomplete#complete#auto_complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent(v:lnum)
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=else,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=ri
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=lib,vendor,app/models/concerns,app/controllers/concerns,app/controllers,app/helpers,app/mailers,app/models,app/*,app/views,spec,spec/controllers,spec/helpers,spec/mailers,spec/models,spec/views,spec/lib,spec/features,spec/requests,spec/integration,vendor/plugins/*/lib,vendor/plugins/*/test,vendor/rails/*/lib,vendor/rails/*/test,~/ianda,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!airline#statusline(1)
setlocal suffixesadd=.rb
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=2
setlocal tags=~/ianda/tags,~/ianda/tmp/tags,~/ianda/.git/ruby.tags,~/ianda/.git/tags,./tags,./TAGS,tags,TAGS,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
2
normal! zo
let s:l = 63 - ((24 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
63
normal! 0
lcd ~/ianda
wincmd w
argglobal
edit ~/ianda/app/views/trips/index.html.erb
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <S-Tab> <Plug>delimitMateS-Tab
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =delimitMate#JumpMany()
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> '[ <Plug>SIG_PrevLineByAlpha
nmap <buffer> '] <Plug>SIG_NextLineByAlpha
nmap <buffer> [- <Plug>SIG_PrevMarkerByType
nmap <buffer> [` <Plug>SIG_PrevSpotByPos
nmap <buffer> [' <Plug>SIG_PrevLineByPos
nmap <buffer> ]- <Plug>SIG_NextMarkerByType
nmap <buffer> ]` <Plug>SIG_NextSpotByPos
nmap <buffer> ]' <Plug>SIG_NextLineByPos
nmap <buffer> `[ <Plug>SIG_PrevSpotByAlpha
nmap <buffer> `] <Plug>SIG_NextSpotByAlpha
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nmap <buffer> m<BS> <Plug>SIG_PurgeMarkers
nmap <buffer> m  <Plug>SIG_PurgeMarks
nmap <buffer> m, <Plug>SIG_PlaceNextMark
nnoremap <buffer> <silent> m :call signature#Input()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> < <Plug>delimitMate<
imap <buffer> > <Plug>delimitMate>
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=j1,J1
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=<%#%s%>
setlocal complete=.,w,b,u,t,i
set concealcursor=i
setlocal concealcursor=i
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=neocomplete#complete#manual_complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'eruby.html'
setlocal filetype=eruby.html
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetErubyIndent()
setlocal indentkeys=o,O,*<Return>,<>>,{,},0),0],o,O,!^F,=end,=else,=elsif,=rescue,=ensure,=when
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=ri
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=lib,vendor,app/models/concerns,app/controllers/concerns,app/controllers,app/helpers,app/mailers,app/models,app/*,app/views,app/views/trips,public,spec,spec/controllers,spec/helpers,spec/mailers,spec/models,spec/views,spec/lib,spec/features,spec/requests,spec/integration,vendor/plugins/*/lib,vendor/plugins/*/test,vendor/rails/*/lib,vendor/rails/*/test,~/ianda,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!airline#statusline(2)
setlocal suffixesadd=.rb
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'eruby.html'
setlocal syntax=eruby.html
endif
setlocal tabstop=4
setlocal tags=~/ianda/tags,~/ianda/tmp/tags,~/ianda/.git/eruby.html.tags,~/ianda/.git/tags,./tags,./TAGS,tags,TAGS,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 21 - ((20 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
21
normal! 02|
lcd ~/ianda
wincmd w
exe 'vert 1resize ' . ((&columns * 64 + 84) / 168)
exe 'vert 2resize ' . ((&columns * 103 + 84) / 168)
tabedit ~/ianda/app/controllers/packages_controller.rb
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 103 + 84) / 168)
exe 'vert 2resize ' . ((&columns * 64 + 84) / 168)
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <S-Tab> <Plug>delimitMateS-Tab
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =delimitMate#JumpMany()
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> '[ <Plug>SIG_PrevLineByAlpha
nmap <buffer> '] <Plug>SIG_NextLineByAlpha
nmap <buffer> [- <Plug>SIG_PrevMarkerByType
nmap <buffer> [` <Plug>SIG_PrevSpotByPos
nmap <buffer> [' <Plug>SIG_PrevLineByPos
nmap <buffer> ]- <Plug>SIG_NextMarkerByType
nmap <buffer> ]` <Plug>SIG_NextSpotByPos
nmap <buffer> ]' <Plug>SIG_NextLineByPos
nmap <buffer> `[ <Plug>SIG_PrevSpotByAlpha
nmap <buffer> `] <Plug>SIG_NextSpotByAlpha
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nmap <buffer> m<BS> <Plug>SIG_PurgeMarkers
nmap <buffer> m  <Plug>SIG_PurgeMarks
nmap <buffer> m, <Plug>SIG_PlaceNextMark
nnoremap <buffer> <silent> m :call signature#Input()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
set concealcursor=i
setlocal concealcursor=i
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=neocomplete#complete#auto_complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent(v:lnum)
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=else,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=ri
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=lib,vendor,app/models/concerns,app/controllers/concerns,app/controllers,app/helpers,app/mailers,app/models,app/*,app/views,app/views/packages,public,spec,spec/controllers,spec/helpers,spec/mailers,spec/models,spec/views,spec/lib,spec/features,spec/requests,spec/integration,vendor/plugins/*/lib,vendor/plugins/*/test,vendor/rails/*/lib,vendor/rails/*/test,~/ianda,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!airline#statusline(1)
setlocal suffixesadd=.rb
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=2
setlocal tags=~/ianda/tags,~/ianda/tmp/tags,~/ianda/.git/ruby.tags,~/ianda/.git/tags,./tags,./TAGS,tags,TAGS,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
2
normal! zo
67
normal! zo
76
normal! zo
93
normal! zo
114
normal! zo
117
normal! zo
140
normal! zo
144
normal! zo
167
normal! zo
169
normal! zo
170
normal! zo
207
normal! zo
209
normal! zo
210
normal! zo
212
normal! zo
let s:l = 126 - ((3 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
126
normal! 0
lcd ~/ianda
wincmd w
argglobal
edit ~/ianda/app/views/compare_sites/_form.html.erb
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <S-Tab> <Plug>delimitMateS-Tab
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =delimitMate#JumpMany()
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> '[ <Plug>SIG_PrevLineByAlpha
nmap <buffer> '] <Plug>SIG_NextLineByAlpha
nmap <buffer> [- <Plug>SIG_PrevMarkerByType
nmap <buffer> [` <Plug>SIG_PrevSpotByPos
nmap <buffer> [' <Plug>SIG_PrevLineByPos
nmap <buffer> ]- <Plug>SIG_NextMarkerByType
nmap <buffer> ]` <Plug>SIG_NextSpotByPos
nmap <buffer> ]' <Plug>SIG_NextLineByPos
nmap <buffer> `[ <Plug>SIG_PrevSpotByAlpha
nmap <buffer> `] <Plug>SIG_NextSpotByAlpha
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nmap <buffer> m<BS> <Plug>SIG_PurgeMarkers
nmap <buffer> m  <Plug>SIG_PurgeMarks
nmap <buffer> m, <Plug>SIG_PlaceNextMark
nnoremap <buffer> <silent> m :call signature#Input()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> < <Plug>delimitMate<
imap <buffer> > <Plug>delimitMate>
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=j1,J1
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=<%#%s%>
setlocal complete=.,w,b,u,t,i
set concealcursor=i
setlocal concealcursor=i
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=neocomplete#complete#auto_complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'eruby.html'
setlocal filetype=eruby.html
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetErubyIndent()
setlocal indentkeys=o,O,*<Return>,<>>,{,},0),0],o,O,!^F,=end,=else,=elsif,=rescue,=ensure,=when
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=ri
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=lib,vendor,app/models/concerns,app/controllers/concerns,app/controllers,app/helpers,app/mailers,app/models,app/*,app/views,app/views/compare_sites,public,spec,spec/controllers,spec/helpers,spec/mailers,spec/models,spec/views,spec/lib,spec/features,spec/requests,spec/integration,vendor/plugins/*/lib,vendor/plugins/*/test,vendor/rails/*/lib,vendor/rails/*/test,~/ianda,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!airline#statusline(2)
setlocal suffixesadd=.rb
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'eruby.html'
setlocal syntax=eruby.html
endif
setlocal tabstop=4
setlocal tags=~/ianda/tags,~/ianda/tmp/tags,~/ianda/.git/eruby.html.tags,~/ianda/.git/tags,./tags,./TAGS,tags,TAGS,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 1 - ((0 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 034|
lcd ~/ianda
wincmd w
exe 'vert 1resize ' . ((&columns * 103 + 84) / 168)
exe 'vert 2resize ' . ((&columns * 64 + 84) / 168)
tabedit ~/ianda/app/views/packages/compare_site_matrices.html.erb
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <S-Tab> <Plug>delimitMateS-Tab
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =delimitMate#JumpMany()
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> '[ <Plug>SIG_PrevLineByAlpha
nmap <buffer> '] <Plug>SIG_NextLineByAlpha
nmap <buffer> [- <Plug>SIG_PrevMarkerByType
nmap <buffer> [` <Plug>SIG_PrevSpotByPos
nmap <buffer> [' <Plug>SIG_PrevLineByPos
nmap <buffer> ]- <Plug>SIG_NextMarkerByType
nmap <buffer> ]` <Plug>SIG_NextSpotByPos
nmap <buffer> ]' <Plug>SIG_NextLineByPos
nmap <buffer> `[ <Plug>SIG_PrevSpotByAlpha
nmap <buffer> `] <Plug>SIG_NextSpotByAlpha
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nmap <buffer> m<BS> <Plug>SIG_PurgeMarkers
nmap <buffer> m  <Plug>SIG_PurgeMarks
nmap <buffer> m, <Plug>SIG_PlaceNextMark
nnoremap <buffer> <silent> m :call signature#Input()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> < <Plug>delimitMate<
imap <buffer> > <Plug>delimitMate>
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=j1,J1
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=<%#%s%>
setlocal complete=.,w,b,u,t,i
set concealcursor=i
setlocal concealcursor=i
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=neocomplete#complete#manual_complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'eruby.html'
setlocal filetype=eruby.html
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetErubyIndent()
setlocal indentkeys=o,O,*<Return>,<>>,{,},0),0],o,O,!^F,=end,=else,=elsif,=rescue,=ensure,=when
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=ri
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=lib,vendor,app/models/concerns,app/controllers/concerns,app/controllers,app/helpers,app/mailers,app/models,app/*,app/views,app/views/packages,public,spec,spec/controllers,spec/helpers,spec/mailers,spec/models,spec/views,spec/lib,spec/features,spec/requests,spec/integration,vendor/plugins/*/lib,vendor/plugins/*/test,vendor/rails/*/lib,vendor/rails/*/test,~/ianda,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%{airline#update_highlight()}%#Al2#%(\ %{get(w:,\ \"airline_current_mode\",\ \"\")}\ %)%{g:airline_detect_paste\ &&\ &paste\ ?\ g:airline_paste_symbol.\"\ \"\ :\ \"\"}%#Al3#>%#Al4#%(\ %{get(w:,\ \"airline_current_branch\",\ \"\")}\ %)%#Al5#>%#Al6#%<%(\ %{bufferline#refresh_status()}%#AlBl_inactive#%{g:bufferline_status_info.before}%#AlBl_active#\ %{g:bufferline_status_info.current}\ %#AlBl_inactive#%{g:bufferline_status_info.after}\ %)\ %#Al7#%(%{&ro\ ?\ g:airline_readonly_symbol\ :\ ''}%)%#Al6#%#Al6#%=%(\ %(%{get(w:,\"airline_active\",0)\ ?\ tagbar#currenttag(\"%s\",\"\")\ :\ \"\"}\ <\ %)%{strlen(&filetype)>0?&filetype:''}\ %)%#Al5#<%#Al4#%(\ %{strlen(&fenc)>0?&fenc:''}%{strlen(&ff)>0?'['.&ff.']':''}\ %)%#Al3#<%#Al2#%(\ %3p%%\ :%3l:%3c\ %)%(%#Al2_to_warningmsg#<%#warningmsg#\ %#warningmsg#%{SyntasticStatuslineFlag()}%{airline#extensions#whitespace#check()}%)
setlocal suffixesadd=.rb
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'eruby.html'
setlocal syntax=eruby.html
endif
setlocal tabstop=4
setlocal tags=~/ianda/tags,~/ianda/tmp/tags,~/ianda/.git/eruby.html.tags,~/ianda/.git/tags,./tags,./TAGS,tags,TAGS,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
2
normal! zo
5
normal! zo
28
normal! zo
30
normal! zo
39
normal! zo
40
normal! zo
51
normal! zo
67
normal! zo
68
normal! zo
69
normal! zo
70
normal! zo
72
normal! zo
let s:l = 51 - ((3 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
51
normal! 07|
lcd ~/ianda
tabedit ~/ianda/app/controllers/trip_multipliers_controller.rb
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 103 + 84) / 168)
exe 'vert 2resize ' . ((&columns * 64 + 84) / 168)
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <S-Tab> <Plug>delimitMateS-Tab
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =delimitMate#JumpMany()
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> '[ <Plug>SIG_PrevLineByAlpha
nmap <buffer> '] <Plug>SIG_NextLineByAlpha
nmap <buffer> [- <Plug>SIG_PrevMarkerByType
nmap <buffer> [` <Plug>SIG_PrevSpotByPos
nmap <buffer> [' <Plug>SIG_PrevLineByPos
nmap <buffer> ]- <Plug>SIG_NextMarkerByType
nmap <buffer> ]` <Plug>SIG_NextSpotByPos
nmap <buffer> ]' <Plug>SIG_NextLineByPos
nmap <buffer> `[ <Plug>SIG_PrevSpotByAlpha
nmap <buffer> `] <Plug>SIG_NextSpotByAlpha
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nmap <buffer> m<BS> <Plug>SIG_PurgeMarkers
nmap <buffer> m  <Plug>SIG_PurgeMarks
nmap <buffer> m, <Plug>SIG_PlaceNextMark
nnoremap <buffer> <silent> m :call signature#Input()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=#\ %s
setlocal complete=.,w,b,u,t,i
set concealcursor=i
setlocal concealcursor=i
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=neocomplete#complete#auto_complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=^\\s*def\\s\\+\\(self\\.\\)\\=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'ruby'
setlocal filetype=ruby
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetRubyIndent(v:lnum)
setlocal indentkeys=0{,0},0),0],!^F,o,O,e,=end,=else,=elsif,=when,=ensure,=rescue,==begin,==end
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=ri
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=lib,vendor,app/models/concerns,app/controllers/concerns,app/controllers,app/helpers,app/mailers,app/models,app/*,app/views,app/views/trip_multipliers,public,spec,spec/controllers,spec/helpers,spec/mailers,spec/models,spec/views,spec/lib,spec/features,spec/requests,spec/integration,vendor/plugins/*/lib,vendor/plugins/*/test,vendor/rails/*/lib,vendor/rails/*/test,~/ianda,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!airline#statusline(1)
setlocal suffixesadd=.rb
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'ruby'
setlocal syntax=ruby
endif
setlocal tabstop=2
setlocal tags=~/ianda/tags,~/ianda/tmp/tags,~/ianda/.git/ruby.tags,~/ianda/.git/tags,./tags,./TAGS,tags,TAGS,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal winfixwidth
setlocal wrap
setlocal wrapmargin=0
2
normal! zo
27
normal! zo
30
normal! zo
43
normal! zo
44
normal! zo
let s:l = 46 - ((28 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
46
normal! 022|
lcd ~/ianda
wincmd w
argglobal
edit ~/ianda/app/views/compare_sites/create.js.erb
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <S-Tab> <Plug>delimitMateS-Tab
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =delimitMate#JumpMany()
nmap <buffer> gf <Plug>RailsTabFind
nmap <buffer> f <Plug>RailsSplitFind
nnoremap <buffer> <silent> g} :exe        "ptjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent> } :exe          "ptag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g] :exe      "stselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe        "stjump =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent> ] :exe v:count1."stag =RubyCursorIdentifier()"
nnoremap <buffer> <silent>  :exe  v:count1."tag =RubyCursorIdentifier()"
nmap <buffer> '[ <Plug>SIG_PrevLineByAlpha
nmap <buffer> '] <Plug>SIG_NextLineByAlpha
nmap <buffer> [- <Plug>SIG_PrevMarkerByType
nmap <buffer> [` <Plug>SIG_PrevSpotByPos
nmap <buffer> [' <Plug>SIG_PrevLineByPos
nmap <buffer> ]- <Plug>SIG_NextMarkerByType
nmap <buffer> ]` <Plug>SIG_NextSpotByPos
nmap <buffer> ]' <Plug>SIG_NextLineByPos
nmap <buffer> `[ <Plug>SIG_PrevSpotByAlpha
nmap <buffer> `] <Plug>SIG_NextSpotByAlpha
nmap <buffer> gf <Plug>RailsFind
nnoremap <buffer> <silent> g] :exe       "tselect =RubyCursorIdentifier()"
nnoremap <buffer> <silent> g :exe         "tjump =RubyCursorIdentifier()"
nmap <buffer> m<BS> <Plug>SIG_PurgeMarkers
nmap <buffer> m  <Plug>SIG_PurgeMarks
nmap <buffer> m, <Plug>SIG_PlaceNextMark
nnoremap <buffer> <silent> m :call signature#Input()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> < <Plug>delimitMate<
imap <buffer> > <Plug>delimitMate>
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=j1,J1
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=:#
setlocal commentstring=<%#%s%>
setlocal complete=.,w,b,u,t,i
set concealcursor=i
setlocal concealcursor=i
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=neocomplete#complete#auto_complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'eruby.html'
setlocal filetype=eruby.html
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=^\\s*\\<\\(load\\>\\|require\\>\\|autoload\\s*:\\=[\"']\\=\\h\\w*[\"']\\=,\\)
setlocal includeexpr=RailsIncludeexpr()
setlocal indentexpr=GetErubyIndent()
setlocal indentkeys=o,O,*<Return>,<>>,{,},0),0],o,O,!^F,=end,=else,=elsif,=rescue,=ensure,=when
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,-
setlocal keywordprg=ri
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=rubycomplete#Complete
setlocal path=lib,vendor,app/models/concerns,app/controllers/concerns,app/controllers,app/helpers,app/mailers,app/models,app/*,app/views,app/views/compare_sites,public,spec,spec/controllers,spec/helpers,spec/mailers,spec/models,spec/views,spec/lib,spec/features,spec/requests,spec/integration,vendor/plugins/*/lib,vendor/plugins/*/test,vendor/rails/*/lib,vendor/rails/*/test,~/ianda,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!airline#statusline(2)
setlocal suffixesadd=.rb
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'eruby.html'
setlocal syntax=eruby.html
endif
setlocal tabstop=4
setlocal tags=~/ianda/tags,~/ianda/tmp/tags,~/ianda/.git/eruby.html.tags,~/ianda/.git/tags,./tags,./TAGS,tags,TAGS,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/site_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/2.0.0/i686-linux/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/vendor_ruby/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/tags,~/.rbenv/versions/2.0.0-p195/lib/ruby/2.0.0/i686-linux/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 1 - ((0 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
lcd ~/ianda
wincmd w
exe 'vert 1resize ' . ((&columns * 103 + 84) / 168)
exe 'vert 2resize ' . ((&columns * 64 + 84) / 168)
tabedit ~/todo
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <Plug>delimitMateJumpMany =delimitMate#JumpMany()
imap <buffer> <S-Tab> <Plug>delimitMateS-Tab
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
imap <buffer> <silent> g <Plug>delimitMateJumpMany
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
set concealcursor=inc
setlocal concealcursor=inc
set conceallevel=1
setlocal conceallevel=1
setlocal completefunc=neocomplete#complete#auto_complete
setlocal copyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != ''
setlocal filetype=
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=99
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%{airline#update_highlight()}%#Al2#%(\ %{get(w:,\ \"airline_current_mode\",\ \"\")}\ %)%{g:airline_detect_paste\ &&\ &paste\ ?\ g:airline_paste_symbol.\"\ \"\ :\ \"\"}%#Al3#>%#Al4#%(\ %{get(w:,\ \"airline_current_branch\",\ \"\")}\ %)%#Al5#>%#Al6#%<%(\ %{bufferline#refresh_status()}%#AlBl_inactive#%{g:bufferline_status_info.before}%#AlBl_active#\ %{g:bufferline_status_info.current}\ %#AlBl_inactive#%{g:bufferline_status_info.after}\ %)\ %#Al7#%(%{&ro\ ?\ g:airline_readonly_symbol\ :\ ''}%)%#Al6#%#Al6#%=%(\ %(%{get(w:,\"airline_active\",0)\ ?\ tagbar#currenttag(\"%s\",\"\")\ :\ \"\"}\ <\ %)%{strlen(&filetype)>0?&filetype:''}\ %)%#Al5#<%#Al4#%(\ %{strlen(&fenc)>0?&fenc:''}%{strlen(&ff)>0?'['.&ff.']':''}\ %)%#Al3#<%#Al2#%(\ %3p%%\ :%3l:%3c\ %)%(%#Al2_to_warningmsg#<%#warningmsg#\ %#warningmsg#%{SyntasticStatuslineFlag()}%{airline#extensions#whitespace#check()}%)
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != ''
setlocal syntax=
endif
setlocal tabstop=4
setlocal tags=~/tags,./tags,./TAGS,tags,TAGS
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 6 - ((5 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
6
normal! 044|
lcd ~/ianda
tabnext 5
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
